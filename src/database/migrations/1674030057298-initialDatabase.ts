import {MigrationInterface, QueryRunner} from "typeorm";

export class initialDatabase1674030057298 implements MigrationInterface {
    name = 'initialDatabase1674030057298'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`assets\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`symbol\` varchar(10) NOT NULL, \`name\` varchar(255) NOT NULL, \`network\` varchar(30) NOT NULL, \`logo\` varchar(255) NULL, \`precision\` int NOT NULL DEFAULT '0', \`contract\` varchar(50) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`crypto_transactions\` (\`id\` bigint NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`order_id\` bigint NOT NULL, \`hash\` varchar(255) NOT NULL, \`network\` varchar(30) NOT NULL, \`status\` int NOT NULL DEFAULT '1', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`fiats\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`name\` varchar(255) NOT NULL, \`logo\` varchar(255) NULL, \`precision\` int NOT NULL DEFAULT '0', \`symbol\` varchar(10) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_method_fields\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`content_type\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`value\` varchar(255) NOT NULL, \`payment_method_id\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_methods\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`user_id\` int NOT NULL, \`type\` varchar(20) NOT NULL, \`method_name\` varchar(255) NOT NULL, \`method_short_name\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`posts\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`merchant_id\` int NOT NULL, \`asset_id\` int NOT NULL, \`fiat_id\` int NOT NULL, \`payment_method_id\` int NULL, \`status\` tinyint NOT NULL DEFAULT '1', \`available_amount\` decimal(27,8) NOT NULL, \`total_amount\` decimal(27,8) NOT NULL, \`finished_amount\` decimal(27,8) NOT NULL, \`block_amount\` decimal(27,8) NOT NULL, \`max_order_amount\` decimal(27,8) NOT NULL, \`min_order_amount\` decimal(27,8) NOT NULL, \`payment_time_limit\` int NOT NULL, \`price\` decimal(27,8) NOT NULL, \`total_fee\` decimal(35,8) NOT NULL, \`total_penalty_fee\` decimal(35,8) NOT NULL, \`real_price\` decimal(27,8) NOT NULL, \`type\` varchar(5) NOT NULL DEFAULT 'SELL', \`note\` text NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`id\` bigint NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`user_id\` int NOT NULL, \`merchant_id\` int NOT NULL, \`asset_id\` int NOT NULL, \`fiat_id\` int NOT NULL, \`post_id\` int NOT NULL, \`amount\` decimal(27,8) NOT NULL, \`total_price\` decimal(27,8) NOT NULL, \`request_amount\` decimal(27,8) NOT NULL, \`price\` decimal(27,8) NOT NULL, \`status\` tinyint NOT NULL, \`step\` tinyint NOT NULL, \`appeal_id\` int NULL, \`type\` varchar(5) NOT NULL DEFAULT 'SELL', \`created_time\` datetime NOT NULL, \`completed_time\` datetime NULL, \`ended_time\` datetime NOT NULL, \`payment_method_id\` int NULL, \`fee\` decimal(10,4) NOT NULL, \`penalty_fee\` decimal(10,4) NOT NULL, \`config\` text NOT NULL, \`cancel_by_id\` int NULL, \`trans_code\` varchar(255) NULL, \`total_fee\` decimal(35,8) NULL, \`total_penalty_fee\` decimal(35,8) NULL, UNIQUE INDEX \`REL_f0b696b5d7c28733b2917bfb25\` (\`appeal_id\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`statistics\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`user_id\` int NOT NULL, \`total_order_count\` int NOT NULL DEFAULT '0', \`order_completed_count\` int NOT NULL DEFAULT '0', \`order_waiting_count\` int NOT NULL DEFAULT '0', \`month_order_count\` int NOT NULL DEFAULT '0', \`month_order_completed_count\` int NOT NULL DEFAULT '0', \`post_shown_count\` int NOT NULL DEFAULT '0', \`post_hide_count\` int NOT NULL DEFAULT '0', \`cancel_order_count\` int NOT NULL DEFAULT '0', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`user_infos\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`margin\` decimal(27,8) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`master_data_levels\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`merchant_level\` int NOT NULL DEFAULT '1', \`fee\` decimal(10,4) NOT NULL DEFAULT '0.0132', \`max_order_limit\` int NOT NULL DEFAULT '1000', \`max_merchant_operator\` int NOT NULL DEFAULT '10', \`created_by_id\` int NOT NULL, \`updated_by_id\` int NULL, UNIQUE INDEX \`IDX_541633f1399ff171d75b7bb4f0\` (\`merchant_level\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notifications\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`title\` varchar(255) NOT NULL, \`description\` varchar(1023) NOT NULL, \`type\` tinyint NOT NULL, \`link\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notification_users\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`user_id\` int NOT NULL, \`notification_id\` int NOT NULL, \`status\` tinyint NOT NULL DEFAULT '0', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`wallet_address\` varchar(255) NULL, \`type\` tinyint NOT NULL DEFAULT '1', \`merchant_level\` int NULL DEFAULT '1', \`merchant_manager_id\` int NULL, \`contract_from\` datetime NULL, \`contract_to\` datetime NULL, \`nick_name\` varchar(255) NULL, \`lock_end_time\` datetime NULL, \`status\` tinyint NOT NULL DEFAULT '1', \`user_info_id\` int NULL, \`statistic_id\` int NULL, FULLTEXT INDEX \`IDX_41151d5f469f3bf18cca2fda6f\` (\`nick_name\`), UNIQUE INDEX \`IDX_196ef3e52525d3cd9e203bdb1d\` (\`wallet_address\`), UNIQUE INDEX \`REL_03deebc191bbb5b9fd4b30abff\` (\`user_info_id\`), UNIQUE INDEX \`REL_e88e5acc0b2b1fe49328df6ed0\` (\`statistic_id\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`appeals\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`winner_id\` int NULL, \`open_at\` datetime NOT NULL, \`close_at\` datetime NULL, \`actual_close_at\` datetime NULL, \`completed_at\` datetime NULL, \`add_extra_at\` datetime NULL, \`evident_at\` datetime NULL, \`decision_at\` datetime NULL, \`decision_result\` tinyint NULL, \`note\` text NULL, \`invite_link\` text NOT NULL, \`group_id\` text NULL, \`group_log_id\` text NOT NULL, \`status\` tinyint NOT NULL DEFAULT '1', \`admin_id\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`blockchain_credential\` (\`id\` bigint NOT NULL AUTO_INCREMENT, \`chain\` varchar(255) NOT NULL, \`address\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`master_data_common\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`supported_bank_list\` text NULL, \`merchant_to_user_time_buy_list\` text NULL, \`merchant_to_user_time_sell_list\` text NULL, \`user_to_merchant_time_buy_list\` text NULL, \`user_to_merchant_time_sell_list\` text NULL, \`asset_network_type_list\` text NULL, \`trading_rule_asset_type_list\` text NULL, \`min_order_limit\` int NOT NULL DEFAULT '1', \`user_ask_merchant_time\` int NOT NULL DEFAULT '10', \`user_ask_cs_time\` int NOT NULL DEFAULT '20', \`fee\` decimal(10,4) NOT NULL DEFAULT '0.0132', \`penalty_fee\` decimal(10,4) NOT NULL DEFAULT '0.0132', \`max_order_limit\` int NOT NULL DEFAULT '1000', \`max_merchant_operator\` int NOT NULL DEFAULT '10', \`created_by_id\` int NOT NULL, \`updated_by_id\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`nonce_histories\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`nonce\` varchar(255) NOT NULL, \`exp\` datetime NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`user_devices\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, \`user_id\` int NOT NULL, \`device_id\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`crypto_transactions\` ADD CONSTRAINT \`FK_1b1d3bc7dee89240f32a52ac1f1\` FOREIGN KEY (\`order_id\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment_method_fields\` ADD CONSTRAINT \`FK_3f2c5059700f1b5aac63578f1a8\` FOREIGN KEY (\`payment_method_id\`) REFERENCES \`payment_methods\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`posts\` ADD CONSTRAINT \`FK_717ca4859d98ff25cb6b2a1e849\` FOREIGN KEY (\`merchant_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`posts\` ADD CONSTRAINT \`FK_3dd742723f71ed49d0d4d7220bf\` FOREIGN KEY (\`asset_id\`) REFERENCES \`assets\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`posts\` ADD CONSTRAINT \`FK_b88299cbbc4574c73b50c5d27f0\` FOREIGN KEY (\`fiat_id\`) REFERENCES \`fiats\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`posts\` ADD CONSTRAINT \`FK_ffe1b182ad69c344e48536ffd5c\` FOREIGN KEY (\`payment_method_id\`) REFERENCES \`payment_methods\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_a922b820eeef29ac1c6800e826a\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_2474866c8f8e9196ff227a7cbbd\` FOREIGN KEY (\`merchant_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_055606f75e7ed988a209b0cc22c\` FOREIGN KEY (\`asset_id\`) REFERENCES \`assets\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_2465b00898e757903f012d835cd\` FOREIGN KEY (\`fiat_id\`) REFERENCES \`fiats\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_4431880582fab347b6290ee72b2\` FOREIGN KEY (\`post_id\`) REFERENCES \`posts\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_f0b696b5d7c28733b2917bfb251\` FOREIGN KEY (\`appeal_id\`) REFERENCES \`appeals\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_7819f136440d4ae83b20f0267a9\` FOREIGN KEY (\`payment_method_id\`) REFERENCES \`payment_methods\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_10d3b9250270115115b3d899d1f\` FOREIGN KEY (\`cancel_by_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notification_users\` ADD CONSTRAINT \`FK_e73f283b2e2b842b231ede5e4af\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notification_users\` ADD CONSTRAINT \`FK_76de091ca3bc0d093cd648a0570\` FOREIGN KEY (\`notification_id\`) REFERENCES \`notifications\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_4cd42f51b1f3ec6d3622bb77e6f\` FOREIGN KEY (\`merchant_manager_id\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_771ab23b45783e766836b2b44af\` FOREIGN KEY (\`merchant_level\`) REFERENCES \`master_data_levels\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_03deebc191bbb5b9fd4b30abffc\` FOREIGN KEY (\`user_info_id\`) REFERENCES \`user_infos\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_e88e5acc0b2b1fe49328df6ed0f\` FOREIGN KEY (\`statistic_id\`) REFERENCES \`statistics\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`appeals\` ADD CONSTRAINT \`FK_c94cf2183ecf06b5909ecd339e1\` FOREIGN KEY (\`winner_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`appeals\` ADD CONSTRAINT \`FK_63efba62dab55e4d91f42fcbaca\` FOREIGN KEY (\`admin_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user_devices\` ADD CONSTRAINT \`FK_28bd79e1b3f7c1168f0904ce241\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`user_devices\` DROP FOREIGN KEY \`FK_28bd79e1b3f7c1168f0904ce241\``);
        await queryRunner.query(`ALTER TABLE \`appeals\` DROP FOREIGN KEY \`FK_63efba62dab55e4d91f42fcbaca\``);
        await queryRunner.query(`ALTER TABLE \`appeals\` DROP FOREIGN KEY \`FK_c94cf2183ecf06b5909ecd339e1\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_e88e5acc0b2b1fe49328df6ed0f\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_03deebc191bbb5b9fd4b30abffc\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_771ab23b45783e766836b2b44af\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_4cd42f51b1f3ec6d3622bb77e6f\``);
        await queryRunner.query(`ALTER TABLE \`notification_users\` DROP FOREIGN KEY \`FK_76de091ca3bc0d093cd648a0570\``);
        await queryRunner.query(`ALTER TABLE \`notification_users\` DROP FOREIGN KEY \`FK_e73f283b2e2b842b231ede5e4af\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_10d3b9250270115115b3d899d1f\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_7819f136440d4ae83b20f0267a9\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_f0b696b5d7c28733b2917bfb251\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_4431880582fab347b6290ee72b2\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_2465b00898e757903f012d835cd\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_055606f75e7ed988a209b0cc22c\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_2474866c8f8e9196ff227a7cbbd\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_a922b820eeef29ac1c6800e826a\``);
        await queryRunner.query(`ALTER TABLE \`posts\` DROP FOREIGN KEY \`FK_ffe1b182ad69c344e48536ffd5c\``);
        await queryRunner.query(`ALTER TABLE \`posts\` DROP FOREIGN KEY \`FK_b88299cbbc4574c73b50c5d27f0\``);
        await queryRunner.query(`ALTER TABLE \`posts\` DROP FOREIGN KEY \`FK_3dd742723f71ed49d0d4d7220bf\``);
        await queryRunner.query(`ALTER TABLE \`posts\` DROP FOREIGN KEY \`FK_717ca4859d98ff25cb6b2a1e849\``);
        await queryRunner.query(`ALTER TABLE \`payment_method_fields\` DROP FOREIGN KEY \`FK_3f2c5059700f1b5aac63578f1a8\``);
        await queryRunner.query(`ALTER TABLE \`crypto_transactions\` DROP FOREIGN KEY \`FK_1b1d3bc7dee89240f32a52ac1f1\``);
        await queryRunner.query(`DROP TABLE \`user_devices\``);
        await queryRunner.query(`DROP TABLE \`nonce_histories\``);
        await queryRunner.query(`DROP TABLE \`master_data_common\``);
        await queryRunner.query(`DROP TABLE \`blockchain_credential\``);
        await queryRunner.query(`DROP TABLE \`appeals\``);
        await queryRunner.query(`DROP INDEX \`REL_e88e5acc0b2b1fe49328df6ed0\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`REL_03deebc191bbb5b9fd4b30abff\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_196ef3e52525d3cd9e203bdb1d\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_41151d5f469f3bf18cca2fda6f\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP TABLE \`notification_users\``);
        await queryRunner.query(`DROP TABLE \`notifications\``);
        await queryRunner.query(`DROP INDEX \`IDX_541633f1399ff171d75b7bb4f0\` ON \`master_data_levels\``);
        await queryRunner.query(`DROP TABLE \`master_data_levels\``);
        await queryRunner.query(`DROP TABLE \`user_infos\``);
        await queryRunner.query(`DROP TABLE \`statistics\``);
        await queryRunner.query(`DROP INDEX \`REL_f0b696b5d7c28733b2917bfb25\` ON \`orders\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`posts\``);
        await queryRunner.query(`DROP TABLE \`payment_methods\``);
        await queryRunner.query(`DROP TABLE \`payment_method_fields\``);
        await queryRunner.query(`DROP TABLE \`fiats\``);
        await queryRunner.query(`DROP TABLE \`crypto_transactions\``);
        await queryRunner.query(`DROP TABLE \`assets\``);
    }

}
